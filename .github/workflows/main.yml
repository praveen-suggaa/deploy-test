# name: Build Docker Image

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and Push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: praveensuggaa/deploy-test:latest

# Service Container / Not Working

# name: Redis Service Example
# on:
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       redis:
#         image: redis
#         ports:
#           - 6379:6379

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up environment
#         run: echo "Environment is set up"

#       - name: Install Redis client
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y redis-tools

#       - name: Wait for Redis service
#         run: sleep 60

#       - name: Connect to Redis service
#         run: redis-cli -h ${{ job.services.redis.ports['6379'] }} ping

#  postgreSQL / not working

# name: PostgreSQL Service Example
# on:
#   push:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: password
#           POSTGRES_DB: mydb
#         ports:
#           - 5432:5432
#         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up environment
#         run: echo "Environment is set up"

#       - name: Wait for PostgreSQL service
#         run: sleep 10

#       - name: Connect to PostgreSQL service
#         run: psql -h ${{ job.services.postgres.ports[5432] }} -U postgres -d mydb -c "SELECT version();"

# testing app

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci
        working-directory: React/testing

      - name: Build and test
        run: |
          npm run build
          npm test
        working-directory: React/testing
